@{
    ViewBag.Title = "WishBrowser";
}

<div class="ui-mobile-viewport ui-overlay-a">
    <div role="main" class="ui-content">
        <div class="col-md-12">
            <h2 class="pageHeading pull-left">Wish Browser</h2>
        </div>
		<button class="ui-btn" id="append-button" >Add</button>
        <br />

		<div class="grid">
			<div class="grid-item">All sizing of items is handled by your CSS.</div>
			<div class="grid-item grid-item--width2">You can use Masonry with vanilla JS:</div>
			<div class="grid-item">Masonry works on a container grid element with a group of child items.</div>
		</div>
    </div>
</div>

<script>
	//http://stackoverflow.com/questions/11162942/javascript-doesnt-execute-in-view-after-a-controller-redirect
	//In jQuery Mobile, Ajax is used to load the contents of each page into the DOM as you navigate, and the DOM ready handler only executes for the first page. 
	//To execute code whenever a new page is loaded and created, you can bind to the pageinit event. Except pageinit doesn't work for me, so bind to pagechange

    $(document).ready(function() {
        var $grid = $('.grid').masonry({
            // options
            itemSelector: '.grid-item',
            columnWidth: 160,
            gutter:10
        });

        $('#append-button').on('click', function () {
            // create new item elements
            var $items = $(getItem());

            // append items to grid
            $grid.append($items)
				// add and lay out newly appended items
				.masonry('appended', $items);
        });
    })

	function getItem() {

		var rString = randomString(Math.floor((Math.random() * 100) + 1), '0123456789 abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ');
		var classString = "grid-item";

		if (Math.floor((Math.random() * 4) + 1) == 1)
			classString = "grid-item";
		else if (Math.floor((Math.random() * 4) + 1) == 2)
			classString = "grid-item grid-item--width2";
		else if (Math.floor((Math.random() * 4) + 1) == 3)
			classString = "grid-item grid-item--width3";
		else
			classString = "grid-item grid-item--width4";

		return '<div class="' + classString + '">' + rString + '</div>';
	}

	function randomString(length, chars) {

		var result = '';
		for (var i = length; i > 0; --i) result += chars[Math.round(Math.random() * (chars.length - 1))];
		return result;

	}

</script>

